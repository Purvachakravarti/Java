
package MyPack;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2-hudson-752-
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CCWebService", targetNamespace = "http://MyPack/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CCWebService {


    /**
     * 
     * @param user
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addUser", targetNamespace = "http://MyPack/", className = "MyPack.AddUser")
    @ResponseWrapper(localName = "addUserResponse", targetNamespace = "http://MyPack/", className = "MyPack.AddUserResponse")
    @Action(input = "http://MyPack/CCWebService/addUserRequest", output = "http://MyPack/CCWebService/addUserResponse")
    public String addUser(
        @WebParam(name = "user", targetNamespace = "")
        SingleUser user);

    /**
     * 
     * @param uid
     * @param pass
     * @return
     *     returns MyPack.SingleUser
     */
    @WebMethod(operationName = "Login")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Login", targetNamespace = "http://MyPack/", className = "MyPack.Login")
    @ResponseWrapper(localName = "LoginResponse", targetNamespace = "http://MyPack/", className = "MyPack.LoginResponse")
    @Action(input = "http://MyPack/CCWebService/LoginRequest", output = "http://MyPack/CCWebService/LoginResponse")
    public SingleUser login(
        @WebParam(name = "uid", targetNamespace = "")
        String uid,
        @WebParam(name = "pass", targetNamespace = "")
        String pass);

    /**
     * 
     * @param uid
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "chechUID", targetNamespace = "http://MyPack/", className = "MyPack.ChechUID")
    @ResponseWrapper(localName = "chechUIDResponse", targetNamespace = "http://MyPack/", className = "MyPack.ChechUIDResponse")
    @Action(input = "http://MyPack/CCWebService/chechUIDRequest", output = "http://MyPack/CCWebService/chechUIDResponse")
    public Boolean chechUID(
        @WebParam(name = "uid", targetNamespace = "")
        String uid);

    /**
     * 
     * @param user
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "UpdateUser")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "UpdateUser", targetNamespace = "http://MyPack/", className = "MyPack.UpdateUser")
    @ResponseWrapper(localName = "UpdateUserResponse", targetNamespace = "http://MyPack/", className = "MyPack.UpdateUserResponse")
    @Action(input = "http://MyPack/CCWebService/UpdateUserRequest", output = "http://MyPack/CCWebService/UpdateUserResponse")
    public String updateUser(
        @WebParam(name = "user", targetNamespace = "")
        SingleUser user);

    /**
     * 
     * @param mid
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeMessage", targetNamespace = "http://MyPack/", className = "MyPack.RemoveMessage")
    @ResponseWrapper(localName = "removeMessageResponse", targetNamespace = "http://MyPack/", className = "MyPack.RemoveMessageResponse")
    @Action(input = "http://MyPack/CCWebService/removeMessageRequest", output = "http://MyPack/CCWebService/removeMessageResponse")
    public String removeMessage(
        @WebParam(name = "mid", targetNamespace = "")
        int mid);

    /**
     * 
     * @param mes
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "AddMessage")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "AddMessage", targetNamespace = "http://MyPack/", className = "MyPack.AddMessage")
    @ResponseWrapper(localName = "AddMessageResponse", targetNamespace = "http://MyPack/", className = "MyPack.AddMessageResponse")
    @Action(input = "http://MyPack/CCWebService/AddMessageRequest", output = "http://MyPack/CCWebService/AddMessageResponse")
    public String addMessage(
        @WebParam(name = "mes", targetNamespace = "")
        SingleMessage mes);

    /**
     * 
     * @param uid
     * @return
     *     returns java.util.List<MyPack.SingleMessage>
     */
    @WebMethod(operationName = "GetMyMessages")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetMyMessages", targetNamespace = "http://MyPack/", className = "MyPack.GetMyMessages")
    @ResponseWrapper(localName = "GetMyMessagesResponse", targetNamespace = "http://MyPack/", className = "MyPack.GetMyMessagesResponse")
    @Action(input = "http://MyPack/CCWebService/GetMyMessagesRequest", output = "http://MyPack/CCWebService/GetMyMessagesResponse")
    public List<SingleMessage> getMyMessages(
        @WebParam(name = "uid", targetNamespace = "")
        String uid);

    /**
     * 
     * @return
     *     returns java.util.List<MyPack.SingleTask>
     */
    @WebMethod(operationName = "FetchTaskList")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "FetchTaskList", targetNamespace = "http://MyPack/", className = "MyPack.FetchTaskList")
    @ResponseWrapper(localName = "FetchTaskListResponse", targetNamespace = "http://MyPack/", className = "MyPack.FetchTaskListResponse")
    @Action(input = "http://MyPack/CCWebService/FetchTaskListRequest", output = "http://MyPack/CCWebService/FetchTaskListResponse")
    public List<SingleTask> fetchTaskList();

    /**
     * 
     * @param uid
     * @param code
     * @return
     *     returns byte[]
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "compileCode", targetNamespace = "http://MyPack/", className = "MyPack.CompileCode")
    @ResponseWrapper(localName = "compileCodeResponse", targetNamespace = "http://MyPack/", className = "MyPack.CompileCodeResponse")
    @Action(input = "http://MyPack/CCWebService/compileCodeRequest", output = "http://MyPack/CCWebService/compileCodeResponse")
    public byte[] compileCode(
        @WebParam(name = "code", targetNamespace = "")
        SingleCode code,
        @WebParam(name = "uid", targetNamespace = "")
        String uid);

    /**
     * 
     * @param uid
     * @param code
     * @return
     *     returns byte[]
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "executeCode", targetNamespace = "http://MyPack/", className = "MyPack.ExecuteCode")
    @ResponseWrapper(localName = "executeCodeResponse", targetNamespace = "http://MyPack/", className = "MyPack.ExecuteCodeResponse")
    @Action(input = "http://MyPack/CCWebService/executeCodeRequest", output = "http://MyPack/CCWebService/executeCodeResponse")
    public byte[] executeCode(
        @WebParam(name = "code", targetNamespace = "")
        SingleCode code,
        @WebParam(name = "uid", targetNamespace = "")
        String uid);

}
