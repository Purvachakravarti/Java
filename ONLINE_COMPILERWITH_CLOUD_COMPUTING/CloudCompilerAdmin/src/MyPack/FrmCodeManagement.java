/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package MyPack;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.*;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author OorjaTech
 */
public class FrmCodeManagement extends javax.swing.JFrame {

    /**
     * Creates new form FrmUserManagement
     */
    Database userdb;
    String javaPath,csPath;
    public FrmCodeManagement() {
        initComponents();
        Dimension sd  = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation(sd.width / 2 - this.getWidth()/ 2, sd.height / 2 - this.getHeight()/ 2);
        javaPath = csPath = "";
        readFromFile();
        fillUserList();
        readPath();
    }
    
    void readFromFile(){
        try{
            ObjectInputStream oi = new ObjectInputStream(new FileInputStream("c:\\projectData\\5040DB\\db.dat"));
            userdb = (Database)oi.readObject();
            oi.close();
        }catch(Exception e){
            System.out.println("Error Reading File : " + e);
        }
    }
    
    void WriteToFile(){
        try{
            ObjectOutputStream oo = new ObjectOutputStream(new FileOutputStream("c:\\projectData\\5040DB\\db.dat"));
            oo.writeObject(userdb);
            oo.close();
        }catch(Exception e){
            System.out.println("Error Writing File : " + e);
        }
    }
    void fillUserList(){
        DefaultListModel lm = new DefaultListModel();
        for(SingleUser s : userdb.allUsers){
            lm.addElement(s.fullName);
        }
        jList1.setModel(lm);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CODE MANAGEMENT");
        jLabel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel5.setBackground(new java.awt.Color(153, 153, 153));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jButton2.setBackground(new java.awt.Color(153, 153, 153));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setText("BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(665, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(153, 153, 153));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        new JavaLib.LoadForm();
        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("SELECT A USER");

        new JavaLib.LoadForm();
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
        );

        new JavaLib.LoadForm();
        jPanel3.setBackground(new java.awt.Color(153, 153, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("SELECT CODE FILE");

        new JavaLib.LoadForm();
        jButton4.setBackground(new java.awt.Color(153, 153, 153));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton4.setText("COMPILE SELECTED CODE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(153, 153, 153));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton5.setText("EXECUTE SELECTED CODE");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jList2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList2ValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jList2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(153, 153, 153));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        new JavaLib.LoadForm();
        jTextArea2.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jTextArea2.setForeground(new java.awt.Color(51, 51, 51));
        jTextArea2.setRows(3);
        jScrollPane3.setViewportView(jTextArea2);

        jLabel11.setBackground(new java.awt.Color(204, 204, 204));
        jLabel11.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("COMPILATION LOG");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //updateTest();

        setVisible(false);
        new MainForm().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        // TODO add your handling code here:
        String[] arr = new String[]{"JA","CS"};
        int index = jList1.getSelectedIndex();
        if(index == -1) return;
        DefaultListModel lm = new DefaultListModel();
        for(SingleCode c : userdb.allUsers.elementAt(index).codes){
            lm.addElement(arr[c.language] + "    " + c.codename);
        }
        jList2.setModel(lm);
    }//GEN-LAST:event_jList1ValueChanged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int uindex = jList1.getSelectedIndex();
        if(uindex == -1) return;
        int cindex = jList2.getSelectedIndex();
        if(cindex == -1) return;
        
        if(userdb.allUsers.elementAt(uindex).codes.elementAt(cindex).language == 0){
            SingleCode sc = userdb.allUsers.elementAt(uindex).codes.elementAt(cindex);
            jTextArea2.setText(compileJava(sc.code, sc.mainClassName, javaPath, "C:\\ProjectData\\5040DB\\CTemp", userdb.allUsers.elementAt(uindex).userID));
        }else{
            SingleCode sc = userdb.allUsers.elementAt(uindex).codes.elementAt(cindex);
            jTextArea2.setText(compileC(sc.code, sc.mainClassName, csPath, "C:\\ProjectData\\5040DB\\CTemp", userdb.allUsers.elementAt(uindex).userID));
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    void readPath(){
        try{
            BufferedReader bw = new BufferedReader(new FileReader("c:\\projectData\\5040DB\\paths.dat"));
            javaPath = bw.readLine();
            csPath = bw.readLine();
            bw.close();
        }catch(Exception e){
            System.out.println("Error : " + e);
        }
    }
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int uindex = jList1.getSelectedIndex();
        if(uindex == -1) return;
        int cindex = jList2.getSelectedIndex();
        if(cindex == -1) return;
        
        if(userdb.allUsers.elementAt(uindex).codes.elementAt(cindex).language == 0){
            SingleCode sc = userdb.allUsers.elementAt(uindex).codes.elementAt(cindex);
            jTextArea2.setText(executeJava(sc.code, sc.mainClassName, javaPath, "C:\\ProjectData\\5040DB\\CTemp", userdb.allUsers.elementAt(uindex).userID));
        }else{
            SingleCode sc = userdb.allUsers.elementAt(uindex).codes.elementAt(cindex);
            jTextArea2.setText(executeC(sc.code, sc.mainClassName, csPath, "C:\\ProjectData\\5040DB\\CTemp", userdb.allUsers.elementAt(uindex).userID));
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jList2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList2ValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jList2ValueChanged

    String compileJava(String code, String mainClass, String javaCompilerDirectory, String codeDirectory, String userID) {
        String result = "";
        
        // flush old directory
        clearDirectory(codeDirectory + "\\" + userID);
        // re-create directory...
        createDirectory(codeDirectory + "\\" + userID);

        try {
            // write java code
            String fname = codeDirectory + "\\" + userID + "\\" + mainClass + ".java";
            BufferedWriter bw = new BufferedWriter(new FileWriter(fname));
            bw.write(code);
            bw.close();

            // compile
            File codeFile = new File(fname);
            String parentDir = codeFile.getParent();

            ArrayList <String> cmd = new ArrayList <String> ();
            cmd.add(javaCompilerDirectory + "javac.exe");
            cmd.add("-classpath");
            cmd.add(parentDir);
            cmd.add("-sourcepath");
            cmd.add(parentDir);
            cmd.add("-d");
            cmd.add(parentDir);
            cmd.add("-verbose");
            cmd.add(fname);

            long t1 = Calendar.getInstance().getTimeInMillis();

            ProcessBuilder pb = new ProcessBuilder(cmd);
            Process p = pb.start();
            String res = "";
            int temp;
            BufferedInputStream in2 = new BufferedInputStream(p.getErrorStream());
            while( (temp=in2.read()) != -1) {
                res += (char)temp;
            }

            long t2 = Calendar.getInstance().getTimeInMillis();
            System.out.println("Time: " + (t2 - t1));
            result = res;
        }catch(Exception e) {
            result = "Exception Compiling: " + e;
        }
        return result;
    }
    
    // compiler directory string must end with \\
    String executeJava(String code, String mainClass, String javaCompilerDirectory, String codeDirectory, String userID) {
        String result = "";
        
        // flush old directory
        clearDirectory(codeDirectory + "\\" + userID);
        // re-create directory...
        createDirectory(codeDirectory + "\\" + userID);

        try {
            String fname = codeDirectory + "\\" + userID + "\\" + mainClass + ".java";
            BufferedWriter bw = new BufferedWriter(new FileWriter(fname));
            bw.write(code);
            bw.close();

            // compile
            File codeFile = new File(fname);
            String parentDir = codeFile.getParent();
            ArrayList <String> cmd = new ArrayList <String> ();
            cmd.add(javaCompilerDirectory + "javac.exe");
            cmd.add("-classpath");
            cmd.add(parentDir);
            cmd.add("-sourcepath");
            cmd.add(parentDir);
            cmd.add("-d");
            cmd.add(parentDir);
            cmd.add("-verbose");
            cmd.add(fname);

            ProcessBuilder pb = new ProcessBuilder(cmd);
            Process p = pb.start();
            String res = "";
            int temp;
            BufferedInputStream in2 = new BufferedInputStream(p.getErrorStream());
            while( (temp=in2.read()) != -1) {
                res += (char)temp;
            }

            // execute code begins...
            fname = codeDirectory + "\\" + userID + "\\" + mainClass + ".java";
            codeFile = new File(fname);
            parentDir = codeFile.getParent();
            
            String className = mainClass;

            cmd = new ArrayList<String> ();
            cmd.add("java");
            cmd.add("-classpath");
            cmd.add(parentDir);
            cmd.add("-Djava.library.path="+parentDir);
            cmd.add(className);

            long t1 = Calendar.getInstance().getTimeInMillis();
            pb = new ProcessBuilder(cmd);
            p = pb.start();
            res = "Program Standard Error Stream:\n";
            in2 = new BufferedInputStream(p.getErrorStream());
            while( (temp=in2.read()) != -1) {
                res += (char)temp;
            }
            res += "\n\nProgram Standard Output Stream:\n";
            in2 = new BufferedInputStream(p.getInputStream());
            while( (temp=in2.read()) != -1) {
                res += (char)temp;
            }
            long t2 = Calendar.getInstance().getTimeInMillis();
            System.out.println("Time: " + (t2-t1));
            result = res;
        }catch(Exception e) {
            result = "Exception: " + e;
        }
        return result;
    }
    
    void createDirectory(String directory) {
        File f = new File(directory);
        try {
            f.mkdir();
        }catch(Exception e) {
            ;
        }
    }    
    
    void clearDirectory(String directory) {
        File f = new File(directory);
        if(!f.exists()) {
            return;
        }
        // delete all internal files
        try {
            File files[] = f.listFiles();
            for(File file: files) {
                try {
                    file.delete();
                }catch(Exception e) {
                    System.out.println("Error Deleting File: " + e);
                }
            }
        }catch(Exception e) {
            ;
        }
        
        try {
            f.delete();
        }catch(Exception e) {
            ;
        }        
    } 
    
    String compileC(String code, String mainClass, String csCompilerDirectory, String codeDirectory, String userID) {
        String result = "";
       // flush old directory
        clearDirectory(codeDirectory + "\\" + userID);
        // re-create directory...
        createDirectory(codeDirectory + "\\" + userID);


        String fname = codeDirectory + "\\" + userID + "\\" + mainClass + ".cpp";
        try {
            new File(fname).delete();
        }catch(Exception e) { ; }
        try {
            BufferedWriter bw = new BufferedWriter(new FileWriter(fname));
            bw.write(code);
            bw.close();
            
            File codeFile = new File(fname);
            String parentDir = codeFile.getParent();
            String exeName = fname;
            while(!exeName.endsWith(".")) { // wait till dot
                exeName = exeName.substring(0,exeName.length()-1);
            }
            exeName += "exe";

            ArrayList <String> cmd = new ArrayList <String> ();
            cmd.add(csCompilerDirectory + "cl.exe");
            cmd.add("/I");
            cmd.add(parentDir);
            cmd.add("\"" + fname + "\"");
            cmd.add("/Fe\"" + exeName + "\"");

            long t1 = Calendar.getInstance().getTimeInMillis();
            ProcessBuilder pb = new ProcessBuilder(cmd);
            pb.directory(new File(parentDir));
            Process p = pb.start();

            String res = "";
            int temp;
            BufferedInputStream in2 = new BufferedInputStream(p.getErrorStream());
            while( (temp=in2.read()) != -1) {
                res += (char)temp;
            }
            res += "\n";
            in2 = new BufferedInputStream(p.getInputStream());
            while( (temp=in2.read()) != -1) {
                res += (char)temp;
            }
            long t2 = Calendar.getInstance().getTimeInMillis();
            System.out.println("Time: " + (t2 - t1));
            result = res;
        }catch(Exception e) {
            result = "Exception Compiling: " + e;
        }

        return result;
    }
    
    String executeC(String code, String mainClass, String csCompilerDirectory, String codeDirectory, String userID) {
        String result = "";
       // flush old directory
        //clearDirectory(codeDirectory + "\\" + userID);
        // re-create directory...
        //createDirectory(codeDirectory + "\\" + userID);

        try {
            String fname = codeDirectory + "\\" + userID + "\\" + mainClass + ".cpp";
            File codeFile = new File(fname);
            String fileName = codeFile.getName();
            String parentDir = codeFile.getParent();
            String exeName = fname;
            while(!exeName.endsWith(".")) { // wait till dot
                exeName = exeName.substring(0,exeName.length()-1);
            }
            exeName += "exe";

            long t1 = Calendar.getInstance().getTimeInMillis();
            ProcessBuilder pb = new ProcessBuilder(exeName);
            pb.directory(new File(parentDir));
            Process p = pb.start();

            String res = "Program Standard Error Stream:\n";
            int temp;
            BufferedInputStream in2 = new BufferedInputStream(p.getErrorStream());
            while( (temp=in2.read()) != -1) {
                res += (char)temp;
            }
            res += "\n\nProgram Standard Output Stream:\n";
            in2 = new BufferedInputStream(p.getInputStream());
            while( (temp=in2.read()) != -1) {
                res += (char)temp;
            }
            long t2 = Calendar.getInstance().getTimeInMillis();
            System.out.println("Time: " + (t2 - t1));
            result = res;
        }catch(Exception e) {
            result = "Exception Compiling: " + e;
        }
        return result;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCodeManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCodeManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCodeManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCodeManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FrmCodeManagement().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
